#pragma once

//*********************************************************************************
//  Unit Data
//*********************************************************************************

/*
    Data format : [(pos, 1.0), (normal, 0.0), (u-axis, 0.0)] x N
*/

#define POINTS_PER_UNIT 12


float defaultunit[][POINTS_PER_UNIT] = {
    { 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f }
};

float cubeunit[][POINTS_PER_UNIT] = {
    { 1.0f, 0.0f, 0.0f, 1.0f, 1.0f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f },
    { -1.0f, 0.0f, 0.0f, 1.0f, -1.0f, 0.0f, 0.0f, 0.0f, 0.0f, -1.0f, 0.0f, 0.0f },
    { 0.0f, 1.0f, 0.0f, 1.0f, 0.0f, 1.0f, 0.0f, 0.0f, -1.0f, 0.0f, 0.0f, 0.0f },
    { 0.0f, -1.0f, 0.0f, 1.0f, 0.0f, -1.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f },
    { 0.0f, 0.0f, 1.0f, 1.0f, 0.0f, 0.0f, 1.0f, 0.0f, 1.0f, 0.0f, 0.0, 0.0f },
    { 0.0f, 0.0f, -1.0f, 1.0f, 0.0f, 0.0f, -1.0f, 0.0f, 1.0f, 0.0f, 0.0, 0.0f }
};

float subcubeunit[][POINTS_PER_UNIT] = {
    { 0.5f, 0.0f, 0.0f, 1.0f, 1.0f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f },
    { -0.5, 0.0f, 0.0f, 1.0f, -1.0f, 0.0f, 0.0f, 0.0f, 0.0f, -1.0f, 0.0f, 0.0f },
    { 0.0f, 0.5f, 0.0f, 1.0f, 0.0f, 1.0f, 0.0f, 0.0f, -1.0f, 0.0f, 0.0f, 0.0f },
    { 0.0f, -0.5f, 0.0f, 1.0f, 0.0f, -1.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f },
    { 0.0f, 0.0f, -0.5f, 1.0f, 0.0f, 0.0f, -1.0f, 0.0f, 1.0f, 0.0f, 0.0, 0.0f }
};

float largecubeunit[][POINTS_PER_UNIT] = {
    { 100.0f, 0.0f, 0.0f, 1.0f, 1.0f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f },
    { -100.0f, 0.0f, 0.0f, 1.0f, -1.0f, 0.0f, 0.0f, 0.0f, 0.0f, -1.0f, 0.0f, 0.0f },
    { 0.0f, 100.0f, 0.0f, 1.0f, 0.0f, 1.0f, 0.0f, 0.0f, -1.0f, 0.0f, 0.0f, 0.0f },
    { 0.0f, -100.0f, 0.0f, 1.0f, 0.0f, -1.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f },
    { 0.0f, 0.0f, 100.0f, 1.0f, 0.0f, 0.0f, 1.0f, 0.0f, 1.0f, 0.0f, 0.0, 0.0f },
    { 0.0f, 0.0f, -100.0f, 1.0f, 0.0f, 0.0f, -1.0f, 0.0f, 1.0f, 0.0f, 0.0, 0.0f }
};

float largesubcubeunit[][POINTS_PER_UNIT] = {
    { 80.5f, 0.0f, 0.0f, 1.0f, 1.0f, 0.0f, 0.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f },
    { -80.5, 0.0f, 0.0f, 1.0f, -1.0f, 0.0f, 0.0f, 0.0f, 0.0f, -1.0f, 0.0f, 0.0f },
    { 0.0f, 80.5f, 0.0f, 1.0f, 0.0f, 1.0f, 0.0f, 0.0f, -1.0f, 0.0f, 0.0f, 0.0f },
    { 0.0f, -80.5f, 0.0f, 1.0f, 0.0f, -1.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f, 0.0f },
    { 0.0f, 0.0f, -80.5f, 1.0f, 0.0f, 0.0f, -1.0f, 0.0f, 1.0f, 0.0f, 0.0, 0.0f }
};

float octahedronunit[][POINTS_PER_UNIT] = {
    { 0.333333f, 0.333333f, 0.333333f, 1.0f, 0.577350f, 0.577350f, 0.577350f, 0.0f, -0.707107f, 0.707107f, 0.0f, 0.0f },
    { 0.333333f, -0.333333f, 0.333333f, 1.0f, 0.577350f, -0.577350f, 0.577350f, 0.0f, 0.707107f, 0.707107f, 0.0f, 0.0f },
    { 0.333333f, 0.333333f, -0.333333f, 1.0f, 0.577350f, 0.577350f, -0.577350f, 0.0f, -0.707107f, 0.707107f, 0.0f, 0.0f },
    { 0.333333f, -0.333333f, -0.333333f, 1.0f, 0.577350f, -0.577350f, -0.577350f, 0.0f, 0.707107f, 0.707107f, 0.0f, 0.0f },
    { -0.333333f, 0.333333f, 0.333333f, 1.0f, -0.577350f, 0.577350f, 0.577350f, 0.0f, -0.707107f, -0.707107f, 0.0f, 0.0f },
    { -0.333333f, -0.333333f, 0.333333f, 1.0f, -0.577350f, -0.577350f, 0.577350f, 0.0f, 0.707107f, -0.707107f, 0.0f, 0.0f },
    { -0.333333f, 0.333333f, -0.333333f, 1.0f, -0.577350f, 0.577350f, -0.577350f, 0.0f, -0.707107f, -0.707107f, 0.0f, 0.0f },
    { -0.333333f, -0.333333f, -0.333333f, 1.0f, -0.577350f, -0.577350f, -0.577350f, 0.0f, 0.707107f, -0.707107f, 0.0f, 0.0f }
};

float suboctahedronunit[][POINTS_PER_UNIT] = {
    { 0.333333f, 0.333333f, -0.333333f + 0.65f, 1.0f, 0.577350f, 0.577350f, -0.577350f, 0.0f, 0.707107f, -0.707107f, 0.0f, 0.0f },
    { 0.333333f, -0.333333f, -0.333333f + 0.65f, 1.0f, 0.577350f, -0.577350f, -0.577350f, 0.0f, -0.707107f, -0.707107f, 0.0f, 0.0f },
    { -0.333333f, 0.333333f, -0.333333f + 0.65f, 1.0f, -0.577350f, 0.577350f, -0.577350f, 0.0f, 0.707107f, 0.707107f, 0.0f, 0.0f },
    { -0.333333f, -0.333333f, -0.333333f + 0.65f, 1.0f, -0.577350f, -0.577350f, -0.577350f, 0.0f, -0.707107f, 0.707107f, 0.0f, 0.0f }
};
